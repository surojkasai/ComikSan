// import 'package:comiksan/model/comic.dart' as comic_model;
// import 'package:comiksan/util/headfooter.dart';
// import 'package:flutter/material.dart';
// import 'package:comiksan/model/comic.dart';

// class ComicReader extends StatefulWidget {
//   final Chapter chapter;

//   const ComicReader({super.key, required this.chapter});

//   @override
//   State<ComicReader> createState() => _ComicReaderState();
// }

// class _ComicReaderState extends State<ComicReader> {
//   final ScrollController _scrollController = ScrollController();
//   bool _isLoading = false;

//   @override
//   void initState() {
//     super.initState();
//     print('=== FLUTTER: ComicReader initialized ===');
//     print('Chapter: ${widget.chapter.title}');
//     print('Chapter ID: ${widget.chapter.chapterId}');
//     print('Total pages: ${widget.chapter.pages.length}');
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Headfooter(
//       body: Scaffold(
//         backgroundColor: Colors.black,
//         appBar: AppBar(
//           backgroundColor: Colors.black,
//           title: Text('${widget.chapter.title}', style: TextStyle(color: Colors.white)),
//           leading: IconButton(
//             icon: Icon(Icons.arrow_back, color: Colors.white),
//             onPressed: () => Navigator.pop(context),
//           ),
//         ),
//         body: _buildReaderBody(),
//       ),
//     );
//   }

//   Widget _buildReaderBody() {
//     if (widget.chapter.pages.isEmpty) {
//       return Center(
//         child: Column(
//           mainAxisAlignment: MainAxisAlignment.center,
//           children: [
//             Icon(Icons.error_outline, color: Colors.white, size: 64),
//             SizedBox(height: 16),
//             Text('No pages available', style: TextStyle(color: Colors.white, fontSize: 18)),
//           ],
//         ),
//       );
//     }

//     return Column(
//       children: [
//         // Progress indicator
//         if (_isLoading)
//           LinearProgressIndicator(
//             backgroundColor: Colors.grey[800],
//             valueColor: AlwaysStoppedAnimation<Color>(Colors.blue),
//           ),

//         // Chapter info
//         // Container(
//         //   padding: EdgeInsets.all(12),
//         //   color: Colors.grey[900],
//         //   child: Row(
//         //     mainAxisAlignment: MainAxisAlignment.spaceBetween,
//         //     children: [
//         //       Text(
//         //         'Chapter ${widget.chapter.chapterNumber}',
//         //         style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
//         //       ),
//         //       Text('${widget.chapter.pages.length} pages', style: TextStyle(color: Colors.white70)),
//         //     ],
//         //   ),
//         // ),

//         // Vertical scrollable pages
//         Expanded(
//           child: NotificationListener<ScrollNotification>(
//             onNotification: (scrollNotification) {
//               // You can add lazy loading or other scroll-based features here
//               return false;
//             },
//             child: Scrollbar(
//               controller: _scrollController,
//               child: ListView.builder(
//                 controller: _scrollController,
//                 physics: AlwaysScrollableScrollPhysics(),
//                 itemCount: widget.chapter.pages.length,
//                 itemBuilder: (context, index) {
//                   final page = widget.chapter.pages[index];
//                   return _buildPageItem(page, index);
//                 },
//               ),
//             ),
//           ),
//         ),
//       ],
//     );
//   }

//   Widget _buildPageItem(comic_model.Page page, int index) {
//     return Container(
//       margin: EdgeInsets.only(bottom: 8),
//       child: Column(
//         children: [
//           // Page number indicator
//           // Container(
//           //   width: double.infinity,
//           //   padding: EdgeInsets.symmetric(vertical: 8, horizontal: 16),
//           //   color: Colors.grey[900],
//           //   child: Text(
//           //     'Page ${page.pageNumber}',
//           //     style: TextStyle(color: Colors.white70, fontSize: 14, fontWeight: FontWeight.w500),
//           //     textAlign: TextAlign.center,
//           //   ),
//           // ),

//           // Page image
//           GestureDetector(
//             onTap: () {
//               // Optional: Add tap to zoom functionality
//               _showFullScreenImage(page, index);
//             },
//             child: Container(
//               color: Colors.black,
//               child: Image.network(
//                 page.imageUrl,
//                 width: double.infinity,
//                 fit: BoxFit.contain,
//                 loadingBuilder: (context, child, loadingProgress) {
//                   if (loadingProgress == null) {
//                     print('✅ Page ${page.pageNumber} loaded successfully');
//                     return child;
//                   }

//                   // Show loading indicator
//                   return Container(
//                     height: 400, // Minimum height while loading
//                     color: Colors.grey[900],
//                     child: Center(
//                       child: Column(
//                         mainAxisAlignment: MainAxisAlignment.center,
//                         children: [
//                           CircularProgressIndicator(
//                             value:
//                                 loadingProgress.expectedTotalBytes != null
//                                     ? loadingProgress.cumulativeBytesLoaded /
//                                         loadingProgress.expectedTotalBytes!
//                                     : null,
//                           ),
//                           SizedBox(height: 8),
//                           Text(
//                             'Loading page ${page.pageNumber}...',
//                             style: TextStyle(color: Colors.white70),
//                           ),
//                         ],
//                       ),
//                     ),
//                   );
//                 },
//                 errorBuilder: (context, error, stackTrace) {
//                   print('❌ Error loading page ${page.pageNumber}: $error');
//                   print('URL: ${page.imageUrl}');

//                   return Container(
//                     height: 400,
//                     color: Colors.grey[900],
//                     child: Column(
//                       mainAxisAlignment: MainAxisAlignment.center,
//                       children: [
//                         Icon(Icons.error, color: Colors.white, size: 50),
//                         SizedBox(height: 10),
//                         Text(
//                           'Failed to load page ${page.pageNumber}',
//                           style: TextStyle(color: Colors.white),
//                         ),
//                         SizedBox(height: 10),
//                         ElevatedButton(
//                           onPressed: () {
//                             setState(() {
//                               // Trigger rebuild to retry loading
//                             });
//                           },
//                           child: Text('Retry'),
//                         ),
//                       ],
//                     ),
//                   );
//                 },
//               ),
//             ),
//           ),
//         ],
//       ),
//     );
//   }

//   void _showFullScreenImage(comic_model.Page page, int index) {
//     showDialog(
//       context: context,
//       builder:
//           (context) => Dialog(
//             backgroundColor: Colors.black,
//             insetPadding: EdgeInsets.zero,
//             child: GestureDetector(
//               onTap: () => Navigator.pop(context),
//               child: Container(
//                 width: double.infinity,
//                 height: double.infinity,
//                 color: Colors.black,
//                 child: InteractiveViewer(
//                   panEnabled: true,
//                   scaleEnabled: true,
//                   minScale: 0.5,
//                   maxScale: 3.0,
//                   child: Center(child: Image.network(page.imageUrl, fit: BoxFit.contain)),
//                 ),
//               ),
//             ),
//           ),
//     );
//   }

//   // Optional: Add jump to page functionality
//   void _showJumpToPageDialog() {
//     showDialog(
//       context: context,
//       builder:
//           (context) => AlertDialog(
//             backgroundColor: Colors.grey[900],
//             title: Text('Jump to Page', style: TextStyle(color: Colors.white)),
//             content: TextField(
//               keyboardType: TextInputType.number,
//               style: TextStyle(color: Colors.white),
//               decoration: InputDecoration(
//                 hintText: 'Enter page number (1-${widget.chapter.pages.length})',
//                 hintStyle: TextStyle(color: Colors.white54),
//                 border: OutlineInputBorder(),
//               ),
//               onSubmitted: (value) {
//                 final pageNumber = int.tryParse(value);
//                 if (pageNumber != null &&
//                     pageNumber >= 1 &&
//                     pageNumber <= widget.chapter.pages.length) {
//                   _jumpToPage(pageNumber - 1);
//                   Navigator.pop(context);
//                 }
//               },
//             ),
//             actions: [
//               TextButton(
//                 onPressed: () => Navigator.pop(context),
//                 child: Text('Cancel', style: TextStyle(color: Colors.white70)),
//               ),
//             ],
//           ),
//     );
//   }

//   void _jumpToPage(int index) {
//     if (_scrollController.hasClients) {
//       final itemHeight = MediaQuery.of(context).size.height * 0.8; // Estimate height
//       final position = index * itemHeight;
//       _scrollController.animateTo(
//         position,
//         duration: Duration(milliseconds: 500),
//         curve: Curves.easeInOut,
//       );
//     }
//   }

//   @override
//   void dispose() {
//     _scrollController.dispose();
//     super.dispose();
//   }
// }